{{- $values := .Values }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: {{ include "outscale.name" $ }}
  namespace: default
  labels:
    {{- include "outscale.labels" $ | nindent 4 }}
spec:
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OscClusterTemplate
      name: {{ include "outscale.name" . }}
      namespace: default

  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: {{ include "outscale.name" $ }}
      namespace: default
    namingStrategy:
      template: {{`"{{ .cluster.name }}-controlplane-{{ .random }}"`}}
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OscMachineTemplate
        name: {{ include "outscale.name" $ }}-controlplane
        namespace: default
    {{- with $.Values.machineHealthCheck }}
    machineHealthCheck:
      {{- . | toYaml | nindent 6 }}
    {{- end }}

  workers:
    machineDeployments:
      {{- range $name, $_ := .Values.workers }}
      - class: {{ $name }}
        strategy:
          rollingUpdate:
            maxSurge: "20%"
            maxUnavailable: 0
          type: RollingUpdate
        namingStrategy:
          template: {{`"{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}"`}}
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
              kind: KubeadmConfigTemplate
              name: {{ include "outscale.name" $ }}
              namespace: default
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: OscMachineTemplate
              name: {{ include "outscale.name" $ }}-worker-{{ $name }}
              namespace: default
          metadata: {}
        {{- with $.Values.machineHealthCheck }}
        machineHealthCheck:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}

  variables:
    - name: proxy
      required: false
      metadata: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            http_proxy:
              type: string
              description: http_proxy
              example: "http://192.168.1.1:8080"
            https_proxy:
              type: string
              description: https_proxy
              example: "http://192.168.1.1:8080"
            no_proxy:
              type: string
              description: http_proxy
              example: "svc,.svc.cluster,.svc.cluster.local,127.0.0.0/8,10.96.0.0/12,172.16.0.0"
    - name: bastion
      required: false
      metadata: {}
      schema:
        openAPIV3Schema:
          type: object
          description: properties of the bastion (if enabled)
          properties:
            enable:
              type: boolean
              description: flag (boolean) to enable/disable the bastion
              default: false
            vmSize:
              type: string
              description: size of the bastion VM. This must be a valid Outscale vmType
              example: tinav5.c4r8p3
            imageName:
              type: string
              description: name of the image to use to provision the bastion VM
              example: ubuntu-2204-2204-kubernetes-v1.28.5-2024-01-10
            subregionName:
              type: string
              description: name of the subregion where the bastion will be deployed
              example: eu-west-2a, eu-west-2b
            rootDisk:
              type: object
              properties:
                iops:
                  type: integer
                  description: IOPS of the root disk
                  default: 1000
                size:
                  type: integer
                  description: size of the root disk in GiB
                  default: 50
                type:
                  type: string
                  description: type of the root disk
                  default: standard
                  enum: ["standard", "gp2", "io1"]
            allow_cidr:
              type: array
              items:
                type: string
              description: list of CIDRs that are allowed to connect to the bastion
          default:
            enable: false
    - name: sshKeypairName
      required: true
      metadata: {}
      schema:
        openAPIV3Schema:
          type: string
          description: name of the SSH Keypair to inject into all the VMs of the cluster
    - name: subregionName
      required: false
      metadata: {}
      schema:
        openAPIV3Schema:
          type: string
          description: |
            Name of the Outscale subregion to use to deploy resources that
            do require subregion to be documented (bastion, subnets,
            OscMachineTemplates dedicated one specific AZ)
          example: eu-west-2a, eu-west-2b
    - name: coreDNSVersion
      # The Coredns version is aligned with the Kubernetes version (via OS image-builder)
      # You can override the version if necessary.
      # see https://github.com/coredns/deployment/blob/master/kubernetes/CoreDNS-k8s_version.md
      required: false
      metadata: {}
      schema:
        openAPIV3Schema:
          type: string
          description: coredns image version
    - name: vmImageName
      required: true
      metadata: {}
      schema:
        openAPIV3Schema:
          type: string
          description: name of the image to use to provision controlplane and worker VMs
    - name: controlPlane
      required: true
      metadata: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            vmSize:
              type: string
              description: size of the controlplane VMs. This must be a valid Outscale vmType
              example: tinav5.c4r8p3
            rootDisk:
              type: object
              properties:
                iops:
                  type: integer
                  description: IOPS of the root disk
                  example: 1000
                size:
                  type: integer
                  description: size of the root disk in GiB
                  example: 50
                type:
                  type: string
                  description: type of the root disk
                  example: standard
                  enum: ["standard", "gp2", "io1"]
              required:
                - iops
                - size
                - type
          required:
            - vmSize
    - name: workers
      required: true
      metadata: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            vmSize:
              type: string
              description: size of the worker VMs. This must be a valid Outscale vmType
              example: tinav5.c4r8p3
            rootDisk:
              type: object
              properties:
                iops:
                  type: integer
                  description: IOPS of the root disk
                  example: 1000
                size:
                  type: integer
                  description: size of the root disk in GiB
                  example: 50
                type:
                  type: string
                  description: type of the root disk
                  example: standard
                  enum: ["standard", "gp2", "io1"]
              required:
                - iops
                - size
                - type
          required:
            - vmSize

  patches:
    # KubeadmControlPlaneTemplate patches
    - name: kcpt_main
      enabledIf: {{ `"{{ if .coreDNSVersion }}true{{end}}"` }}
      definitions:
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/kubeadmConfigSpec/clusterConfiguration/dns/imageTag
              valueFrom:
                variable: coreDNSVersion

    # KubeadmControlPlaneTemplate patches
    - name: kcpt_main_1
      definitions:
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/kubeadmConfigSpec/clusterConfiguration/controllerManager/extraArgs/cluster-name
              valueFrom:
                variable: builtin.cluster.name

    # patches proxy in KubeadmControlPlaneTemplate and KubeadmConfigTemplate
    - name: proxy
      enabledIf: {{`"{{ hasKey .proxy \"http_proxy\" }}"`}}
      definitions:
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            # append a new files in cloud-init
            - op: add
              path: "/spec/template/spec/kubeadmConfigSpec/files/-"
              valueFrom:
                template: |
                  # This a cloud-init files item (not list)
                  # Create numbered file with last number
                  # We can't have same filename in clusterclass and kubeadmcontrolplanetemplate
                  path: /etc/systemd/system/containerd.service.d/99-http-proxy.conf
                  owner: root:root
                  permissions: "0644"
                  content: |
                    [Service]
                    Environment="HTTP_PROXY={{`{{ .proxy.http_proxy }}`}}"
                    Environment="HTTPS_PROXY={{`{{ .proxy.https_proxy }}`}}"
                    Environment="NO_PROXY={{`{{ .proxy.no_proxy }}`}}"
            # append a new files in cloud-init
            - op: add
              path: "/spec/template/spec/kubeadmConfigSpec/files/-"
              valueFrom:
                template: |
                  # This a cloud-init files item (not list)
                  # Create numbered file with last number
                  # We can't have same filename in clusterclass and kubeadmcontrolplanetemplate
                  path: /etc/apt/apt.conf.d/99zproxy
                  owner: root:root
                  permissions: "0644"
                  content: |
                    Acquire {
                      {{- if $values.global.http_proxy }}
                      http::Proxy {{`{{ .proxy.http_proxy | quote }}`}};
                      {{- end }}
                      {{- if $values.global.https_proxy }}
                      https::Proxy {{`{{ .proxy.https_proxy | quote }}`}};
                      {{- end }}
                    }
        - selector:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            matchResources:
              machineDeploymentClass:
                names:
                  {{- range $name, $_ := .Values.workers }}
                  - {{ $name }}
                  {{- end }}
          jsonPatches:
            # append a new files in cloud-init
            - op: add
              path: "/spec/template/spec/files/-"
              valueFrom:
                template: |
                  # This a cloud-init files item (not list)
                  # Create numbered file with last number
                  # We can't have same filename in clusterclass and kubeadmcontrolplanetemplate
                  path: /etc/systemd/system/containerd.service.d/99-http-proxy.conf
                  owner: root:root
                  permissions: "0644"
                  content: |
                    [Service]
                    Environment="HTTP_PROXY={{`{{ .proxy.http_proxy }}`}}"
                    Environment="HTTPS_PROXY={{`{{ .proxy.https_proxy }}`}}"
                    Environment="NO_PROXY={{`{{ .proxy.no_proxy }}`}}"
            # append a new files in cloud-init
            - op: add
              path: "/spec/template/spec/files/-"
              valueFrom:
                template: |
                  # This a cloud-init files item (not list)
                  # Create numbered file with last number
                  # We can't have same filename in clusterclass and kubeadmcontrolplanetemplate
                  path: /etc/apt/apt.conf.d/99zproxy
                  owner: root:root
                  permissions: "0644"
                  content: |
                    Acquire {
                      {{- if $values.global.http_proxy }}
                      http::Proxy {{`{{ .proxy.http_proxy | quote }}`}};
                      {{- end }}
                      {{- if $values.global.https_proxy }}
                      https::Proxy {{`{{ .proxy.https_proxy | quote }}`}};
                      {{- end }}
                    }

    # OscMachineTemplate (ControlPlane) patches
    - name: omt_controlplane_main
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/node/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/node/image/name
              valueFrom:
                variable: vmImageName
            - op: replace
              path: /spec/template/spec/node/keypair/name
              valueFrom:
                variable: sshKeypairName
            - op: replace
              path: /spec/template/spec/node/vm/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/node/vm/keypairName
              valueFrom:
                variable: sshKeypairName
            - op: replace
              path: /spec/template/spec/node/vm/loadBalancerName
              valueFrom:
                template: {{`"{{ printf \"%s-%s\" (lower .builtin.cluster.name | sha256sum | trunc 28 ) \"k8s\" }}"`}}
            - op: replace
              path: /spec/template/spec/node/vm/vmType
              valueFrom:
                variable: controlPlane.vmSize

    # OscMachineTemplate (ControlPlane) patches for RootDisk
    - name: omt_controlplane_rootdisk
      enabledIf: {{`"{{ hasKey .controlPlane \"rootDisk\" }}"`}}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/node/vm/rootDisk
              valueFrom:
                template: |
                  {{`rootDiskIops: {{ .controlPlane.rootDisk.iops }}
                  rootDiskSize: {{ .controlPlane.rootDisk.size }}
                  rootDiskType: {{ .controlPlane.rootDisk.type }}`}}

    # OscMachineTemplate (Workers) patches
    - name: omt_workers_main
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscMachineTemplate
            matchResources:
              machineDeploymentClass:
                names:
                  {{- range $name, $_ := .Values.workers }}
                  - {{ $name }}
                  {{- end }}
          jsonPatches:
            - op: replace
              path: /spec/template/spec/node/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/node/image/name
              valueFrom:
                variable: vmImageName
            - op: replace
              path: /spec/template/spec/node/keypair/name
              valueFrom:
                variable: sshKeypairName
            - op: replace
              path: /spec/template/spec/node/vm/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/node/vm/keypairName
              valueFrom:
                variable: sshKeypairName
            - op: replace
              path: /spec/template/spec/node/vm/vmType
              valueFrom:
                variable: workers.vmSize

    # OscMachineTemplate (workers) patches for RootDisk
    - name: omt_workers_rootdisk
      enabledIf: {{`"{{ hasKey .workers \"rootDisk\" }}"`}}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscMachineTemplate
            matchResources:
              machineDeploymentClass:
                names:
                  {{- range $name, $_ := .Values.workers }}
                  - {{ $name }}
                  {{- end }}
          jsonPatches:
            - op: replace
              path: /spec/template/spec/node/vm/rootDisk
              valueFrom:
                template: |
                  {{`rootDiskIops: {{ .workers.rootDisk.iops }}
                  rootDiskSize: {{ .workers.rootDisk.size }}
                  rootDiskType: {{ .workers.rootDisk.type }}`}}

    # OscClusterTemplate patches
    - name: oct_main
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/network/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/network/internetService/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/network/publicIps
              valueFrom:
                template: |
                  {{`{{ printf "- name: %s-%s" .builtin.cluster.name "publicip-nat" }}`}}
            - op: replace
              path: /spec/template/spec/network/loadBalancer/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/network/loadBalancer/loadbalancername
              valueFrom:
                template: {{`"{{ printf \"%s-%s\" (lower .builtin.cluster.name | sha256sum | trunc 28 ) \"k8s\" }}"`}}
            - op: replace
              path: /spec/template/spec/network/natService/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/network/net/clusterName
              valueFrom:
                variable: builtin.cluster.name
            - op: replace
              path: /spec/template/spec/network/subnets
              valueFrom:
                template: |
                  {{`- ipSubnetRange: 10.0.4.0/24
                    name: {{ printf "%s-subnet-kcp" .builtin.cluster.name }}
                    subregionName: {{ .subregionName }}`}}
                  {{`- ipSubnetRange: 10.0.3.0/24
                    name: {{ printf "%s-subnet-kw" .builtin.cluster.name }}
                    subregionName: {{ .subregionName }}`}}
                  {{`- ipSubnetRange: 10.0.2.0/24
                    name: {{ printf "%s-subnet-public" .builtin.cluster.name }}
                    subregionName: {{ .subregionName }}`}}
            - op: replace
              path: /spec/template/spec/network/securityGroups
              valueFrom:
                template: |
                  {{`- description: Security Group for workers with {{ .builtin.cluster.name }}
                    name: {{ printf "%s-securitygroup-kw" .builtin.cluster.name }}
                    securityGroupRules:`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kw-bgp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 179
                        toPortRange: 179
                        ipProtocol: tcp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygrouprule-api-kubelet-kw" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 10250
                        toPortRange: 10250
                        ipProtocol: tcp
                        ipRange: 10.0.3.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kw-nodeip-kcp" .builtin.cluster.name }}
                        flow: Inbound
                        toPortRange: 32767
                        fromPortRange: 30000
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-api-kubelet-kcp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 10250
                        toPortRange: 10250
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kw-nodeip-kw" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 30000
                        toPortRange: 32767
                        ipProtocol: tcp
                        ipRange: 10.0.3.0/24`}}
                  {{`- description: Security Group for controlplane with {{ .builtin.cluster.name }}
                    name: {{ printf "%s-securitygroup-kcp" .builtin.cluster.name }}
                    securityGroupRules:`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kcp-bgp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 179
                        toPortRange: 179
                        ipProtocol: tcp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygrouprule-api-lb" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 6443
                        toPortRange: 6443
                        ipProtocol: tcp
                        ipRange: 10.0.2.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-api-kw" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 6443
                        toPortRange: 6443
                        ipProtocol: tcp
                        ipRange: 10.0.3.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-api-kcp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 6443
                        toPortRange: 6443
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kcp-nodeip-kw" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 30000
                        toPortRange: 32767
                        ipProtocol: tcp
                        ipRange: 10.0.3.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-etcd" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 2378
                        toPortRange: 2380
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-kubelet-kcp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 10250
                        toPortRange: 10252
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitugrouprule-kcp-nodeip-kcp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 30000
                        toPortRange: 32767
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                  {{`- description: Security Group for load-balancer with {{ .builtin.cluster.name }}
                    name: {{ printf "%s-securitygroup-lb" .builtin.cluster.name }}
                    securityGroupRules:`}}
                      {{`- name: {{ printf "%s-securitygrouprule-lb-out" .builtin.cluster.name }}
                        flow: Outbound
                        fromPortRange: 6443
                        toPortRange: 6443
                        ipProtocol: tcp
                        ipRange: 10.0.4.0/24`}}
                      {{`- name: {{ printf "%s-securitygrouprule-lb" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 6443
                        toPortRange: 6443
                        ipProtocol: tcp
                        ipRange: 0.0.0.0/0`}}
                  {{`- description: Security Group for nodes with {{ .builtin.cluster.name }}
                    name: {{ printf "%s-securitygroup-node" .builtin.cluster.name }}
                    tag: OscK8sMainSG
                    securityGroupRules:`}}
                      {{`- name: {{ printf "%s-securitygroup-all-tcp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 1
                        toPortRange: 65535
                        ipProtocol: "-1"
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-calico-vxlan" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 4789
                        toPortRange: 4789
                        ipProtocol: udp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-typha" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 5473
                        toPortRange: 5473
                        ipProtocol: udp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-icmp" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 8
                        toPortRange: 8
                        ipProtocol: icmp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-cilium-vxlan" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 8472
                        toPortRange: 8472
                        ipProtocol: udp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-cilium-health" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 4240
                        toPortRange: 4240
                        ipProtocol: tcp
                        ipRange: 10.0.0.0/16`}}
                      {{`- name: {{ printf "%s-securitygroup-cilium-hubble" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 4244
                        toPortRange: 4244
                        ipProtocol: tcp
                        ipRange: 10.0.0.0/16`}}
                      {{`{{- if .bastion.enable }}`}}
                      {{`- name: {{ printf "%s-securitygrouprule-ssh" .builtin.cluster.name }}
                        flow: Inbound
                        fromPortRange: 22
                        toPortRange: 22
                        ipProtocol: tcp
                        ipRange: 10.0.2.0/24`}}
                      {{`{{- end }}`}}

    # OscClusterTemplate patches for the bastion
    - name: oct_bastion
      enabledIf: {{`"{{ .bastion.enable }}"`}}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/network/bastion
              valueFrom:
                template: |
                  {{`enable: true
                  clusterName: {{ .builtin.cluster.name }}
                  name: {{ printf "%s-vm-bastion" .builtin.cluster.name }}
                  keypairName: {{ .sshKeypairName }}
                  vmType: {{ .bastion.vmSize }}
                  imageName: {{ .bastion.imageName }}
                  deviceName: "/dev/sda1"
                  rootDisk:
                    rootDiskIops: {{ .bastion.rootDisk.iops }}
                    rootDiskSize: {{ .bastion.rootDisk.size }}
                    rootDiskType: {{ .bastion.rootDisk.type }}
                  subnetName: {{ printf "%s-subnet-public" .builtin.cluster.name }}
                  subregionName: {{ .bastion.subregionName }}
                  securityGroupNames:
                    - name: {{ printf "%s-securitygroup-bastion" .builtin.cluster.name }}
                  publicIpName: {{ printf "%s-publicip-bastion" .builtin.cluster.name }}`}}
            - op: add
              path: /spec/template/spec/network/publicIps/-
              valueFrom:
                template: |
                  {{`{{ printf "name: %s-%s" .builtin.cluster.name "publicip-bastion" }}`}}

    # OscClusterTemplate patches for the bastion (when 'allow_cidr' has items defined)
    - name: oct_bastion_with_allow_cidr
      enabledIf: {{`"{{ and (.bastion.enable) (gt (.bastion.allow_cidr | len) 0) }}"`}}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OscClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/network/securityGroups/-
              valueFrom:
                template: |
                  description: Security Group for bastion(s) with {{`{{ .builtin.cluster.name }}`}}
                  name: "{{ print "{{ .builtin.cluster.name }}" "-securitygroup-bastion" }}"
                  securityGroupRules:
                    {{`{{- $clusterName := .builtin.cluster.name }}
                    {{- range $i, $cidr := .bastion.allow_cidr }}
                    - name: {{ printf "%s-securitygrouprule-ssh-%d" $clusterName $i }}
                      flow: Inbound
                      fromPortRange: 22
                      toPortRange: 22
                      ipProtocol: tcp
                      ipRange: {{ $cidr }}
                    {{- end }}`}}

